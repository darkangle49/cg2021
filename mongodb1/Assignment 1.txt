                                   Assignment-1

1.Get all Documents->  db.mongo_practice.find() or db.mongo.find().pretty()

2.Get all documents with writer set to "Quentin Tarantino"
            |->db.movies.find({"writer" : "Quentin Tarantino"})

3.Get all documents where actors include "Brad Pitt"
            |->db.movies.find({"actors" : "Brad Pitt"})

4. Get all documents with frnachise set to "The Hobbit"
           |->db.movies.find({"franchise": "The Hobbit"})

5. Get all the movies released in the 90s
           |->db.movies.find({$and:[{"year" : {$gt:1900}},{"year":{$lt: 2000}}]}).pretty()

6. Get all movies released before the year 2000 or after 2010
           |->db.movies.find({$or:[{"year" : {$lt:2000}},{"year":{$gt: 2010}}]}).pretty()


Updations

1. Add a synopsis to "The Hobbit: An Unexpected Journey": "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain hoem -and the gold within it -from the dragon Smaug."
           |->db.movies.update({"title":"The Hobbit: An Unexpected Journey"},{$push:{"synopsis":"A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home -and the gold within it -from the dragon Smaug."}})

2. Add a synopsis to the "The Hobbit The Desolation Of Smaug"
           |->db.movies.update({"title":"The Hobbit The Desolation Of Smaug"}, {$push:{"synopsis": "The dwarves, along with Bilbo Baggins and Gandalf the Gray, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possesson of a mysterious and magical ring"}})

3. Add an Actor named "Samuel L. Jackson" to the movie "Pulp Fiction"
          |->db.movies.update({"title":"Pulp Fiction"}, {$push: {"actors": "Samuel L. Jackson"}})


TEXT SEARCH

1. find all movies that have a synopsis thhat contain the word "Bilbo"
           |->So firstly we have to create an Index
          SYNTAX:db.collection_name.createIndex({post_text:"text"}
               ->db.movies.createIndex({synopsis:"text"})
              After clicking enter...it will create index...NEXT
            ---------- TO search for a required word--------------
        SYNTAX->  db.collection_name.find({$text:{$search:"Name of word..we have to search"}}).pretty()
                  db.movies.find({$text:{$search:"Bilbo"}}).pretty()

2. Find all movies that have a synopsis that contain the word "Gandalf"
            |->db.movies.find({$text:{$search:"Gandalf"}}).pretty

   3.  db.movies.find({text:{$search:"Bilbo"}}, $and:{$nin:["Gandalf"]})

4(UPDATE). db.movies.find({$and:[{"synopsis": "dwarves"},{"synopsis": "nobbit"}]})



RELATIONS

1. Find all users
       |->db.users.find().pretty()

2. Find all posts
        |->db.posts.find().pretty()

3. Find all posts that are authored by "GoodGuyGreg"
        |->db.posts.find({"username":"GoodGuyGreg"}).pretty()

4. Find all posts that was Authored by "ScumbagSteve"
          |->db.posts.find({"username": "ScumagSteve"}).pretty()

5. Find all comments
          |->db.comments.find().pretty()

6. Find all comments that was authored by "GoodGuyGreg"
         |->db.comments.find({"username":"GoodGuyGreg"}).pretty()

7. Find all comments that was authored by "ScumbagSteve"
         |->db.comments.find({"username":"ScumbagSteve"}).pretty()

8. Find all comments belonging to the post " Reports a bug in your code"
          |->






